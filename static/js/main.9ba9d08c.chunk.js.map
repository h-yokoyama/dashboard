{"version":3,"sources":["lib/ClockUtil.ts","components/clock/digital/DigitalClock.tsx","components/clock/Clock.tsx","data/Weather.ts","components/PublishOn.tsx","components/weather/NearWeatherCard.tsx","components/weather/WeekWeatherCard.tsx","components/weather/Weather.tsx","components/Dashboard.tsx","App.tsx","index.tsx"],"names":["zeroPadding","num","length","Array","join","toString","slice","DigitalClock","date","useContext","DateContext","hour","getHours","minute","getMinutes","second","getSeconds","style","fontSize","lineHeight","createContext","Date","Clock","useState","setDate","useEffect","subscription","interval","subscribe","unsubscribe","Provider","value","defaultWeatherProps","dates","weather","src","high","low","time1","time2","time3","time4","rainyPer1","rainyPer2","rainyPer3","rainyPer4","wave","wind","publishOn","PublishOn","Typography","variant","createData","time","rainyPer","NearWeatherCard","rows","tableCellStyle","padding","fontWeight","fontFamily","Card","sx","m","textAlign","CardContent","component","color","red","blue","CardMedia","width","image","alt","TableContainer","Table","aria-label","TableHead","TableRow","TableCell","align","map","row","scope","TableBody","colSpan","WeekWeatherCard","pb","BASE_URL","URL_NEAR","URL_WEEK","Weather","nearWeather","setNearWeather","weekWeather","setWeekWeather","fetchDate","setFetchDate","nextFetchDate","setNextFetchDate","loading","setLoading","error","setError","setWeather","promiseNear","fetch","then","response","json","catch","Promise","reject","promiseWeek","all","promiseNearRes","primiseWeekRes","finally","setInterval","clearInterval","JSON","stringify","Box","display","margin","CircularProgress","Grid","container","spacing","item","xs","DashBoard","flexGrow","App","className","Dashboard","theme","createTheme","typography","h3","h4","h5","h6","palette","mode","render","ThemeProvider","document","getElementById"],"mappings":"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","file":"static/js/main.9ba9d08c.chunk.js","sourcesContent":["export const zeroPadding = (num: number, length: number): string => {\n  return (Array(length).join('0') + num.toString()).slice(-length)\n}\n","import React, { useContext } from 'react'\nimport { zeroPadding } from '../../../lib/ClockUtil'\nimport { DateContext } from '../Clock'\n\nconst DigitalClock: React.FC = () => {\n  const date = useContext<Date>(DateContext)\n  const hour = zeroPadding(date.getHours(), 2)\n  const minute = zeroPadding(date.getMinutes(), 2)\n  const second = zeroPadding(date.getSeconds(), 2)\n  return (\n    <p style={{ fontSize: '144px', lineHeight: 0 }}>\n      <span>{hour}</span> : <span>{minute}</span> : <span>{second}</span>\n    </p>\n  )\n}\nexport default DigitalClock\n","import { useState, useEffect, createContext } from 'react'\nimport { interval } from 'rxjs'\nimport DigitalClock from './digital/DigitalClock'\n\nexport const DateContext = createContext<Date>(new Date())\n\nconst Clock: React.FC = () => {\n  const [date, setDate] = useState<Date>(new Date())\n\n  useEffect(() => {\n    const subscription = interval(1000).subscribe(() => setDate(new Date()))\n    return () => subscription.unsubscribe()\n  }, [])\n\n  return (\n    <DateContext.Provider value={date}>\n      <DigitalClock />\n    </DateContext.Provider>\n  )\n}\nexport default Clock\n","import { IWeathersProps } from '../interface/Weather'\nexport const defaultWeatherProps: IWeathersProps = {\n  dates: [\n    {\n      date: '',\n      weather: '',\n      src: '',\n      high: '',\n      low: '',\n      time1: '',\n      time2: '',\n      time3: '',\n      time4: '',\n      rainyPer1: '',\n      rainyPer2: '',\n      rainyPer3: '',\n      rainyPer4: '',\n      wave: '',\n      wind: ''\n    }\n  ],\n  publishOn: ''\n}\n","import Typography from '@mui/material/Typography'\nimport React from 'react'\n\nexport interface Props {\n  publishOn: string | undefined\n}\n\nconst PublishOn: React.FC<Props> = ({ publishOn }) => {\n  return <Typography variant='body1'>{publishOn}</Typography>\n}\nexport default PublishOn\n","import {\n  Card,\n  CardMedia,\n  CardContent,\n  Typography,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow\n} from '@mui/material'\nimport { red, blue } from '@mui/material/colors'\nimport { IWeather } from '../../interface/Weather'\n\nfunction createData(time: string, rainyPer: string) {\n  return { time, rainyPer }\n}\n\nconst NearWeatherCard: React.FC<IWeather> = ({\n  date,\n  weather,\n  src,\n  high,\n  low,\n  time1,\n  time2,\n  time3,\n  time4,\n  rainyPer1,\n  rainyPer2,\n  rainyPer3,\n  rainyPer4,\n  wave,\n  wind\n}) => {\n  const rows = [\n    createData(time1 ?? '', rainyPer1 ?? ''),\n    createData(time2 ?? '', rainyPer2 ?? ''),\n    createData(time3 ?? '', rainyPer3 ?? ''),\n    createData(time4 ?? '', rainyPer4 ?? '')\n  ]\n\n  const tableCellStyle = {\n    fontSize: '20px',\n    padding: '8px',\n    fontWeight: 'bold',\n    fontFamily: 'Yusei Magic'\n  } as const\n\n  return (\n    <Card sx={{ m: 1, textAlign: 'center' }}>\n      <CardContent>\n        <Typography variant='h4' component='div'>\n          {date}\n        </Typography>\n        <Typography variant='h4' component='span' color={red[500]}>\n          {high}\n        </Typography>\n        <Typography variant='h4' component='span'>\n          {' '}\n        </Typography>\n        <Typography variant='h4' component='span' color={blue[500]}>\n          {low}\n        </Typography>\n      </CardContent>\n      <CardMedia component='img' width='100%' image={src} alt={weather} />\n      <Typography variant='h3' component='div'>\n        {weather}\n      </Typography>\n\n      <TableContainer>\n        <Table aria-label='simple table'>\n          <TableHead>\n            <TableRow>\n              <TableCell style={tableCellStyle} align='center'>\n                時間\n              </TableCell>\n              {rows.map((row) => (\n                <TableCell\n                  key={row.time}\n                  style={tableCellStyle}\n                  align='center'\n                  component='th'\n                  scope='row'>\n                  {row.time}\n                </TableCell>\n              ))}\n            </TableRow>\n            <TableRow>\n              <TableCell style={tableCellStyle} align='center'>\n                降水\n              </TableCell>\n              {rows.map((row) => (\n                <TableCell\n                  key={row.time}\n                  style={tableCellStyle}\n                  align='center'\n                  component='th'\n                  scope='row'>\n                  {row.rainyPer}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            <TableRow>\n              <TableCell style={tableCellStyle} colSpan={5} align='right'>\n                {wind}\n              </TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell style={tableCellStyle} colSpan={5} align='right'>\n                {wave}\n              </TableCell>\n            </TableRow>\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </Card>\n  )\n}\nexport default NearWeatherCard\n","import { CardContent, Typography, Card, CardMedia } from '@mui/material'\nimport { red, blue } from '@mui/material/colors'\nimport React from 'react'\nimport { IWeather } from '../../interface/Weather'\n\nconst WeekWeatherCard: React.FC<IWeather> = ({\n  date,\n  src,\n  high,\n  low,\n  weather\n}) => {\n  return (\n    <Card sx={{ m: 1, pb: 2, textAlign: 'center' }}>\n      <CardContent>\n        <Typography variant='h5' component='div'>\n          {date}\n        </Typography>\n        <Typography variant='h4' component='span' color={red[500]}>\n          {high}\n        </Typography>\n        <Typography variant='h4' component='span'>\n          {' '}\n        </Typography>\n        <Typography variant='h4' component='span' color={blue[500]}>\n          {low}\n        </Typography>\n      </CardContent>\n      <CardMedia component='img' width='100%' image={src} alt={weather} />\n      <Typography variant='h4' component='div'>\n        {weather}\n      </Typography>\n    </Card>\n  )\n}\nexport default WeekWeatherCard\n","import { Box, Grid } from '@mui/material'\nimport CircularProgress from '@mui/material/CircularProgress'\nimport { useEffect, useState } from 'react'\nimport { defaultWeatherProps } from '../../data/Weather'\nimport { IWeathersProps } from '../../interface/Weather'\nimport { zeroPadding } from '../../lib/ClockUtil'\nimport PublishOn from '../PublishOn'\nimport NearWeatherCard from './NearWeatherCard'\nimport WeekWeatherCard from './WeekWeatherCard'\n\nconst BASE_URL = 'https://lambda-result-bucket.s3.ap-northeast-1.amazonaws.com/'\nconst URL_NEAR = `${BASE_URL}ytenki_near.json`\nconst URL_WEEK = `${BASE_URL}ytenki_week.json`\nconst INTERVAL = 60 * 60 * 2 * 1000 // 2hour\n\nconst Weather: React.FC = () => {\n  const [nearWeather, setNearWeather] =\n    useState<IWeathersProps>(defaultWeatherProps)\n  const [weekWeather, setWeekWeather] =\n    useState<IWeathersProps>(defaultWeatherProps)\n  const [fetchDate, setFetchDate] = useState<string>()\n  const [nextFetchDate, setNextFetchDate] = useState<string>()\n  const [loading, setLoading] = useState(true)\n  const [error, setError] = useState<boolean>(false)\n  const setWeather = () => {\n    const promiseNear = fetch(URL_NEAR)\n      .then((response) => response.json())\n      .catch((error) => Promise.reject(error))\n    const promiseWeek = fetch(URL_WEEK)\n      .then((response) => response.json())\n      .catch((error) => Promise.reject(error))\n\n    Promise.all([promiseNear, promiseWeek])\n      .then(([promiseNearRes, primiseWeekRes]) => {\n        setNearWeather(promiseNearRes)\n        setWeekWeather(primiseWeekRes)\n\n        const date = new Date()\n        const hour = zeroPadding(date.getHours(), 2)\n        const minute = zeroPadding(date.getMinutes(), 2)\n        const second = zeroPadding(date.getSeconds(), 2)\n        setFetchDate(`取得:${hour}時${minute}分${second}秒`)\n        setNextFetchDate(\n          `次回:${zeroPadding(date.getHours() + 2, 2)}時${minute}分`\n        )\n      })\n      .catch(() => setError(true))\n      .finally(() => setLoading(false))\n  }\n\n  useEffect(() => {\n    setWeather()\n    const interval = setInterval(() => {\n      setWeather()\n    }, INTERVAL)\n    return () => clearInterval(interval)\n  }, [])\n\n  if (error) return <pre>{JSON.stringify(error, null, 2)}</pre>\n  if (loading) {\n    return (\n      <Box sx={{ display: 'block', margin: 'auto' }}>\n        <CircularProgress />\n      </Box>\n    )\n  }\n\n  return (\n    <>\n      <Grid sx={{ width: '50%' }} container spacing={1}>\n        <Grid item xs={6}>\n          <NearWeatherCard {...nearWeather.dates[0]} />\n        </Grid>\n        <Grid item xs={6}>\n          <NearWeatherCard {...nearWeather.dates[1]} />\n        </Grid>\n      </Grid>\n      <Grid sx={{ width: '50%' }} container spacing={1}>\n        <Grid item xs={4}>\n          <WeekWeatherCard {...weekWeather.dates[0]} />\n        </Grid>\n        <Grid item xs={4}>\n          <WeekWeatherCard {...weekWeather.dates[3]} />\n        </Grid>\n        <Grid item xs={4}>\n          <WeekWeatherCard {...weekWeather.dates[1]} />\n        </Grid>\n        <Grid item xs={4}>\n          <WeekWeatherCard {...weekWeather.dates[4]} />\n        </Grid>\n        <Grid item xs={4}>\n          <WeekWeatherCard {...weekWeather.dates[2]} />\n        </Grid>\n        <Grid item xs={4}>\n          <WeekWeatherCard {...weekWeather.dates[5]} />\n        </Grid>\n      </Grid>\n      <Grid container spacing={1}>\n        <Grid sx={{ textAlign: 'right' }} item xs={6}>\n          <PublishOn {...nearWeather} />\n        </Grid>\n        <Grid sx={{ textAlign: 'right' }} item xs={6}>\n          <PublishOn {...nearWeather} />\n        </Grid>\n        <Grid sx={{ textAlign: 'right' }} item xs={6}>\n          <PublishOn publishOn={fetchDate} />\n        </Grid>\n        <Grid sx={{ textAlign: 'right' }} item xs={6}>\n          <PublishOn publishOn={nextFetchDate} />\n        </Grid>\n      </Grid>\n    </>\n  )\n}\nexport default Weather\n","import { Grid, Box } from '@mui/material'\nimport React from 'react'\nimport Clock from './clock/Clock'\nimport Weather from './weather/Weather'\n\nconst DashBoard: React.FC = () => {\n  return (\n    <Box sx={{ flexGrow: 1 }}>\n      <Grid container spacing={1}>\n        <Grid sx={{ textAlign: 'center', fontWeight: 'bold' }} item xs={12}>\n          <Clock />\n        </Grid>\n      </Grid>\n      <Grid container spacing={1}>\n        <Weather />\n      </Grid>\n    </Box>\n  )\n}\nexport default DashBoard\n","import Dashboard from './components/Dashboard'\nimport './App.scss'\n\nconst App: React.FC = () => {\n  return (\n    <div className='app'>\n      <Dashboard />\n    </div>\n  )\n}\nexport default App\n","import { createTheme, ThemeProvider } from '@mui/material'\nimport { render } from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nconst theme = createTheme({\n  typography: {\n    h3: {\n      fontWeight: 'bold'\n    },\n    h4: {\n      fontWeight: 'bold'\n    },\n    h5: {\n      fontWeight: 'bold'\n    },\n    h6: {\n      fontWeight: 'bold'\n    }\n  },\n  palette: {\n    mode: 'dark'\n  }\n})\n\nrender(\n  <ThemeProvider theme={theme}>\n    <App />\n  </ThemeProvider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}