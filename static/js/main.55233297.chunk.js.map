{"version":3,"sources":["lib/ClockUtil.ts","components/clock/digital/DigitalClock.tsx","components/clock/Clock.tsx","data/NewsRanking.ts","components/news/News.tsx","data/Weather.ts","components/PublishOn.tsx","components/weather/NearWeatherCard.tsx","components/weather/WeekWeatherCard.tsx","components/weather/Weather.tsx","components/Dashboard.tsx","App.tsx","index.tsx"],"names":["zeroPadding","num","length","Array","join","toString","slice","DigitalClock","date","useContext","DateContext","hour","getHours","minute","getMinutes","second","getSeconds","style","fontSize","lineHeight","createContext","Date","Clock","useState","setDate","useEffect","subscription","interval","subscribe","unsubscribe","Provider","value","defaultNewsProps","ranking","media","number","src","time","title","URL_RANKING","News","news","setNews","loading","setLoading","error","setError","setNewsRanking","promiseNews","fetch","then","response","json","catch","Promise","reject","all","promiseNewsRes","finally","setInterval","clearInterval","JSON","stringify","Box","sx","display","margin","CircularProgress","showIndicators","showThumbs","autoPlay","infiniteLoop","transitionTime","filter","_n","i","map","from","keys","_v","j","n","Card","Grid","container","justifyContent","alignItems","item","xs","Avatar","textAlign","bgcolor","red","color","aria-label","CardMedia","component","height","image","alt","direction","Typography","align","paddingLeft","variant","paddingRight","defaultWeatherProps","dates","weather","high","low","time1","time2","time3","time4","rainyPer1","rainyPer2","rainyPer3","rainyPer4","wave","wind","publishOn","PublishOn","createData","rainyPer","NearWeatherCard","rows","tableCellStyle","padding","fontWeight","fontFamily","m","CardContent","blue","width","TableContainer","Table","TableHead","TableRow","TableCell","row","scope","TableBody","colSpan","WeekWeatherCard","pb","BASE_URL","URL_NEAR","URL_WEEK","Weather","nearWeather","setNearWeather","weekWeather","setWeekWeather","fetchDate","setFetchDate","nextFetchDate","setNextFetchDate","setWeather","promiseNear","promiseWeek","promiseNearRes","primiseWeekRes","spacing","DashBoard","flexGrow","App","className","Dashboard","theme","createTheme","typography","h3","h4","h5","h6","palette","mode","render","ThemeProvider","document","getElementById"],"mappings":"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","file":"static/js/main.55233297.chunk.js","sourcesContent":["export const zeroPadding = (num: number, length: number): string => {\n  return (Array(length).join('0') + num.toString()).slice(-length)\n}\n","import React, { useContext } from 'react'\nimport { zeroPadding } from '../../../lib/ClockUtil'\nimport { DateContext } from '../Clock'\n\nconst DigitalClock: React.FC = () => {\n  const date = useContext<Date>(DateContext)\n  const hour = zeroPadding(date.getHours(), 2)\n  const minute = zeroPadding(date.getMinutes(), 2)\n  const second = zeroPadding(date.getSeconds(), 2)\n  return (\n    <p style={{ fontSize: '110px', lineHeight: 0 }}>\n      <span>{hour}</span> : <span>{minute}</span> : <span>{second}</span>\n    </p>\n  )\n}\nexport default DigitalClock\n","import { useState, useEffect, createContext } from 'react'\nimport { interval } from 'rxjs'\nimport DigitalClock from './digital/DigitalClock'\n\nexport const DateContext = createContext<Date>(new Date())\n\nconst Clock: React.FC = () => {\n  const [date, setDate] = useState<Date>(new Date())\n\n  useEffect(() => {\n    const subscription = interval(1000).subscribe(() => setDate(new Date()))\n    return () => subscription.unsubscribe()\n  }, [])\n\n  return (\n    <DateContext.Provider value={date}>\n      <DigitalClock />\n    </DateContext.Provider>\n  )\n}\nexport default Clock\n","import { INewsRanking } from '../interface/News'\nexport const defaultNewsProps: INewsRanking = {\n  ranking: [{ media: '', number: '', src: '', time: '', title: '' }]\n}\n","// import { Avatar, Box, Card, CardHeader, CardMedia } from '@mui/material'\nimport { Avatar, Box, Card, CardMedia, Grid, Typography } from '@mui/material'\n\nimport CircularProgress from '@mui/material/CircularProgress'\nimport { red } from '@mui/material/colors'\nimport React, { useEffect, useState } from 'react'\nimport { Carousel } from 'react-responsive-carousel'\nimport { defaultNewsProps } from '../../data/NewsRanking'\nimport { INewsRanking, INews } from '../../interface/News'\nimport 'react-responsive-carousel/lib/styles/carousel.min.css'\n\nconst BASE_URL = 'https://lambda-result-bucket.s3.ap-northeast-1.amazonaws.com/'\nconst URL_RANKING = `${BASE_URL}ynews_ranking.json`\nconst INTERVAL = 60 * 60 * 2 * 1000 // 2hour\nconst NEWS_DISPLAY_SIZE = 4\n\nconst News: React.FC = () => {\n  const [news, setNews] = useState<INewsRanking>(defaultNewsProps)\n  const [loading, setLoading] = useState(true)\n  const [error, setError] = useState<boolean>(false)\n  const setNewsRanking = () => {\n    const promiseNews = fetch(URL_RANKING)\n      .then((response) => response.json())\n      .catch((error) => Promise.reject(error))\n\n    Promise.all([promiseNews, promiseNews])\n      .then(([promiseNewsRes]) => {\n        setNews(promiseNewsRes)\n      })\n      .catch(() => setError(true))\n      .finally(() => setLoading(false))\n  }\n\n  useEffect(() => {\n    setNewsRanking()\n    const interval = setInterval(() => setNewsRanking(), INTERVAL)\n    return () => clearInterval(interval)\n  }, [])\n\n  if (error) return <pre>{JSON.stringify(error, null, 2)}</pre>\n  if (loading) {\n    return (\n      <Box sx={{ display: 'block', margin: 'auto' }}>\n        <CircularProgress />\n      </Box>\n    )\n  }\n\n  const NewsItem = (n: INews) => (\n    <Card>\n      <Grid container sx={{ justifyContent: 'center', alignItems: 'center' }}>\n        <Grid item xs={1}>\n          <Avatar\n            sx={{\n              textAlign: 'center',\n              bgcolor: red[500],\n              margin: '0 auto',\n              color: '#FFF'\n            }}\n            aria-label='recipe'>\n            {n.number}\n          </Avatar>\n        </Grid>\n        <Grid item xs={1}>\n          <CardMedia\n            component='img'\n            sx={{ height: '81px' }}\n            image={n.src}\n            alt={n.title}\n          />\n        </Grid>\n        <Grid item xs={10}>\n          <Grid container direction='column'>\n            <Grid item xs={10}>\n              <Typography\n                align='left'\n                sx={{ fontSize: 16, paddingLeft: '8px' }}>\n                {n.title}\n              </Typography>\n            </Grid>\n            <Grid item xs={2}>\n              <Typography\n                align='right'\n                variant='subtitle2'\n                sx={{\n                  paddingRight: '8px'\n                }}>{`${n.media} ${n.time}`}</Typography>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n    </Card>\n  )\n\n  return (\n    <div style={{ margin: '8px 24px 16px 0' }}>\n      <Carousel\n        showIndicators={false}\n        showThumbs={false}\n        autoPlay\n        infiniteLoop\n        interval={3000}\n        transitionTime={500}>\n        {news.ranking\n          .filter((_n: INews, i: number) => i % NEWS_DISPLAY_SIZE === 0)\n          .map((_n: INews, i: number) => (\n            <div key={i}>\n              {Array.from(Array(NEWS_DISPLAY_SIZE).keys()).map((_v, j) =>\n                NewsItem(news.ranking[i * NEWS_DISPLAY_SIZE + j])\n              )}\n            </div>\n          ))}\n      </Carousel>\n    </div>\n  )\n}\nexport default News\n","import { IWeathersProps } from '../interface/Weather'\nexport const defaultWeatherProps: IWeathersProps = {\n  dates: [\n    {\n      date: '',\n      weather: '',\n      src: '',\n      high: '',\n      low: '',\n      time1: '',\n      time2: '',\n      time3: '',\n      time4: '',\n      rainyPer1: '',\n      rainyPer2: '',\n      rainyPer3: '',\n      rainyPer4: '',\n      wave: '',\n      wind: ''\n    }\n  ],\n  publishOn: ''\n}\n","import Typography from '@mui/material/Typography'\nimport React from 'react'\n\nexport interface Props {\n  publishOn: string | undefined\n}\n\nconst PublishOn: React.FC<Props> = ({ publishOn }) => {\n  return <Typography variant='body1'>{publishOn}</Typography>\n}\nexport default PublishOn\n","import {\n  Card,\n  CardMedia,\n  CardContent,\n  Typography,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow\n} from '@mui/material'\nimport { red, blue } from '@mui/material/colors'\nimport { IWeather } from '../../interface/Weather'\n\nfunction createData(time: string, rainyPer: string) {\n  return { time, rainyPer }\n}\n\nconst NearWeatherCard: React.FC<IWeather> = ({\n  date,\n  weather,\n  src,\n  high,\n  low,\n  time1,\n  time2,\n  time3,\n  time4,\n  rainyPer1,\n  rainyPer2,\n  rainyPer3,\n  rainyPer4,\n  wave,\n  wind\n}) => {\n  const rows = [\n    createData(time1 ?? '', rainyPer1 ?? ''),\n    createData(time2 ?? '', rainyPer2 ?? ''),\n    createData(time3 ?? '', rainyPer3 ?? ''),\n    createData(time4 ?? '', rainyPer4 ?? '')\n  ]\n\n  const tableCellStyle = {\n    fontSize: '20px',\n    padding: '8px',\n    fontWeight: 'bold',\n    fontFamily: 'Yusei Magic'\n  } as const\n\n  return (\n    <Card sx={{ m: 1, textAlign: 'center' }}>\n      <CardContent>\n        <Typography variant='h4' component='div'>\n          {date}\n        </Typography>\n        <Typography variant='h4' component='span' color={red[500]}>\n          {high}\n        </Typography>\n        <Typography variant='h4' component='span'>\n          {' '}\n        </Typography>\n        <Typography variant='h4' component='span' color={blue[500]}>\n          {low}\n        </Typography>\n      </CardContent>\n      <CardMedia component='img' width='100%' image={src} alt={weather} />\n      <Typography variant='h3' component='div'>\n        {weather}\n      </Typography>\n\n      <TableContainer>\n        <Table aria-label='simple table'>\n          <TableHead>\n            <TableRow>\n              <TableCell style={tableCellStyle} align='center'>\n                時間\n              </TableCell>\n              {rows.map((row) => (\n                <TableCell\n                  key={row.time}\n                  style={tableCellStyle}\n                  align='center'\n                  component='th'\n                  scope='row'>\n                  {row.time}\n                </TableCell>\n              ))}\n            </TableRow>\n            <TableRow>\n              <TableCell style={tableCellStyle} align='center'>\n                降水\n              </TableCell>\n              {rows.map((row) => (\n                <TableCell\n                  key={row.time}\n                  style={tableCellStyle}\n                  align='center'\n                  component='th'\n                  scope='row'>\n                  {row.rainyPer}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            <TableRow>\n              <TableCell style={tableCellStyle} colSpan={5} align='right'>\n                {wind}\n              </TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell style={tableCellStyle} colSpan={5} align='right'>\n                {wave}\n              </TableCell>\n            </TableRow>\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </Card>\n  )\n}\nexport default NearWeatherCard\n","import { CardContent, Typography, Card, CardMedia } from '@mui/material'\nimport { red, blue } from '@mui/material/colors'\nimport React from 'react'\nimport { IWeather } from '../../interface/Weather'\n\nconst WeekWeatherCard: React.FC<IWeather> = ({\n  date,\n  src,\n  high,\n  low,\n  weather\n}) => {\n  return (\n    <Card sx={{ m: 1, pb: 2, textAlign: 'center' }}>\n      <CardContent>\n        <Typography variant='h5' component='div'>\n          {date}\n        </Typography>\n        <Typography variant='h4' component='span' color={red[500]}>\n          {high}\n        </Typography>\n        <Typography variant='h4' component='span'>\n          {' '}\n        </Typography>\n        <Typography variant='h4' component='span' color={blue[500]}>\n          {low}\n        </Typography>\n      </CardContent>\n      <CardMedia component='img' width='100%' image={src} alt={weather} />\n      <Typography variant='h4' component='div'>\n        {weather}\n      </Typography>\n    </Card>\n  )\n}\nexport default WeekWeatherCard\n","import { Box, Grid } from '@mui/material'\nimport CircularProgress from '@mui/material/CircularProgress'\nimport { useEffect, useState } from 'react'\nimport { defaultWeatherProps } from '../../data/Weather'\nimport { IWeathersProps } from '../../interface/Weather'\nimport { zeroPadding } from '../../lib/ClockUtil'\nimport PublishOn from '../PublishOn'\nimport NearWeatherCard from './NearWeatherCard'\nimport WeekWeatherCard from './WeekWeatherCard'\n\nconst BASE_URL = 'https://lambda-result-bucket.s3.ap-northeast-1.amazonaws.com/'\nconst URL_NEAR = `${BASE_URL}ytenki_near.json`\nconst URL_WEEK = `${BASE_URL}ytenki_week.json`\nconst INTERVAL = 60 * 60 * 2 * 1000 // 2hour\n\nconst Weather: React.FC = () => {\n  const [nearWeather, setNearWeather] =\n    useState<IWeathersProps>(defaultWeatherProps)\n  const [weekWeather, setWeekWeather] =\n    useState<IWeathersProps>(defaultWeatherProps)\n  const [fetchDate, setFetchDate] = useState<string>()\n  const [nextFetchDate, setNextFetchDate] = useState<string>()\n  const [loading, setLoading] = useState(true)\n  const [error, setError] = useState<boolean>(false)\n  const setWeather = () => {\n    const promiseNear = fetch(URL_NEAR)\n      .then((response) => response.json())\n      .catch((error) => Promise.reject(error))\n    const promiseWeek = fetch(URL_WEEK)\n      .then((response) => response.json())\n      .catch((error) => Promise.reject(error))\n\n    Promise.all([promiseNear, promiseWeek])\n      .then(([promiseNearRes, primiseWeekRes]) => {\n        setNearWeather(promiseNearRes)\n        setWeekWeather(primiseWeekRes)\n\n        const date = new Date()\n        const hour = zeroPadding(date.getHours(), 2)\n        const minute = zeroPadding(date.getMinutes(), 2)\n        const second = zeroPadding(date.getSeconds(), 2)\n        setFetchDate(`取得:${hour}時${minute}分${second}秒`)\n        setNextFetchDate(\n          `次回:${zeroPadding(date.getHours() + 2, 2)}時${minute}分`\n        )\n      })\n      .catch(() => setError(true))\n      .finally(() => setLoading(false))\n  }\n\n  useEffect(() => {\n    setWeather()\n    const interval = setInterval(() => {\n      setWeather()\n    }, INTERVAL)\n    return () => clearInterval(interval)\n  }, [])\n\n  if (error) return <pre>{JSON.stringify(error, null, 2)}</pre>\n  if (loading) {\n    return (\n      <Box sx={{ display: 'block', margin: 'auto' }}>\n        <CircularProgress />\n      </Box>\n    )\n  }\n\n  return (\n    <>\n      <Grid sx={{ width: '50%' }} container spacing={1}>\n        <Grid item xs={6}>\n          <NearWeatherCard {...nearWeather.dates[0]} />\n        </Grid>\n        <Grid item xs={6}>\n          <NearWeatherCard {...nearWeather.dates[1]} />\n        </Grid>\n      </Grid>\n      <Grid sx={{ width: '50%' }} container spacing={1}>\n        <Grid item xs={4}>\n          <WeekWeatherCard {...weekWeather.dates[0]} />\n        </Grid>\n        <Grid item xs={4}>\n          <WeekWeatherCard {...weekWeather.dates[1]} />\n        </Grid>\n        <Grid item xs={4}>\n          <WeekWeatherCard {...weekWeather.dates[2]} />\n        </Grid>\n        <Grid item xs={4}>\n          <WeekWeatherCard {...weekWeather.dates[3]} />\n        </Grid>\n        <Grid item xs={4}>\n          <WeekWeatherCard {...weekWeather.dates[4]} />\n        </Grid>\n        <Grid item xs={4}>\n          <WeekWeatherCard {...weekWeather.dates[5]} />\n        </Grid>\n      </Grid>\n      <Grid container spacing={1}>\n        <Grid sx={{ textAlign: 'right' }} item xs={6}>\n          <PublishOn {...nearWeather} />\n        </Grid>\n        <Grid sx={{ textAlign: 'right' }} item xs={6}>\n          <PublishOn {...nearWeather} />\n        </Grid>\n        <Grid sx={{ textAlign: 'right' }} item xs={6}>\n          <PublishOn publishOn={fetchDate} />\n        </Grid>\n        <Grid sx={{ textAlign: 'right' }} item xs={6}>\n          <PublishOn publishOn={nextFetchDate} />\n        </Grid>\n      </Grid>\n    </>\n  )\n}\nexport default Weather\n","import { Grid, Box } from '@mui/material'\nimport React from 'react'\nimport Clock from './clock/Clock'\nimport News from './news/News'\nimport Weather from './weather/Weather'\n\nconst DashBoard: React.FC = () => {\n  return (\n    <Box sx={{ flexGrow: 1 }}>\n      <Grid container spacing={1}>\n        <Grid sx={{ textAlign: 'center', fontWeight: 'bold' }} item xs={6}>\n          <Clock />\n        </Grid>\n        <Grid xs={6}>\n          <News />\n        </Grid>\n      </Grid>\n      <Grid container spacing={1}>\n        <Weather />\n      </Grid>\n    </Box>\n  )\n}\nexport default DashBoard\n","import Dashboard from './components/Dashboard'\nimport './App.scss'\n\nconst App: React.FC = () => {\n  return (\n    <div className='app'>\n      <Dashboard />\n    </div>\n  )\n}\nexport default App\n","import { createTheme, ThemeProvider } from '@mui/material'\nimport { render } from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nconst theme = createTheme({\n  typography: {\n    h3: {\n      fontWeight: 'bold'\n    },\n    h4: {\n      fontWeight: 'bold'\n    },\n    h5: {\n      fontWeight: 'bold'\n    },\n    h6: {\n      fontWeight: 'bold'\n    }\n  },\n  palette: {\n    mode: 'dark'\n  }\n})\n\nrender(\n  <ThemeProvider theme={theme}>\n    <App />\n  </ThemeProvider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}